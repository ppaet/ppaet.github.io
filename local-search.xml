<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Mysql关闭ONLY_FULL_GROUP_BY</title>
    <link href="/Mysql%E5%85%B3%E9%97%ADONLY-FULL-GROUP-BY.html"/>
    <url>/Mysql%E5%85%B3%E9%97%ADONLY-FULL-GROUP-BY.html</url>
    
    <content type="html"><![CDATA[<p>Mysql禁用ONLY_FULL_GROUP_BY<br>首先找到mysql配置文件位置<br>  <code>mysql --help</code><br>输出中有类似:<br><code>Default options are read from the following files in the given order:</code><br><code>/etc/my.cnf /etc/mysql/my.cnf /usr/etc/my.cnf ~/.my.cnf</code>  </p><p>在<code>/etc/my.cnf /etc/mysql/my.cnf /usr/etc/my.cnf ~/.my.cnf</code>任意文件的<code>[mysqld]</code>下添加以下配置即可  </p><h2 id="mysql5-7"><a href="#mysql5-7" class="headerlink" title="mysql5.7"></a>mysql5.7</h2><p><code>sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</code>  </p><h2 id="mysql8"><a href="#mysql8" class="headerlink" title="mysql8"></a>mysql8</h2><p><code>sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION</code>  </p><h1 id=""><a href="#" class="headerlink" title=""></a></h1><p>重启mysql<br><code>systemctl restart mysql</code>  </p><p>查看是否生效<br><code>SELECT @@sql_mode;</code>  </p><p>输出中不再包含<code>ONLY_FULL_GROUP_BY</code>  </p>]]></content>
    
    
    <categories>
      
      <category>运维</category>
      
      <category>mysql</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mysql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker安装配置RabbitMQ并安装x-delayed-message插件</title>
    <link href="/Docker%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AERabbitMQ%E5%B9%B6%E5%AE%89%E8%A3%85x-delayed-message%E6%8F%92%E4%BB%B6.html"/>
    <url>/Docker%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AERabbitMQ%E5%B9%B6%E5%AE%89%E8%A3%85x-delayed-message%E6%8F%92%E4%BB%B6.html</url>
    
    <content type="html"><![CDATA[<p>镜像版本号带着management字样代表带有网页管理界面<br>拉取最新版镜像  </p><pre><code class="hljs">docker pull rabbitmq:4.1.2-management  docker run -d --hostname rabbitmq --name rabbitmq --privileged -v /docker-data/rabbitmq:/var/lib/rabbitmq -e RABBITMQ_DEFAULT_USER=admin -e RABBITMQ_DEFAULT_VHOST=my_vhost -e RABBITMQ_DEFAULT_PASS=123456 -p 15672:15672 -p 5672:5672 --restart=always rabbitmq:4.1.2-management  </code></pre><p>安装插件<br><a href="https://github.com/rabbitmq/rabbitmq-delayed-message-exchange/releases">插件下载仓库</a><br>下载插件  </p><pre><code class="hljs">wget https://github.com/rabbitmq/rabbitmq-delayed-message-exchange/releases/download/v4.1.0/rabbitmq_delayed_message_exchange-4.1.0.ez  </code></pre><p>上传插件到容器  </p><pre><code class="hljs">docker cp rabbitmq_delayed_message_exchange-4.1.0.ez rabbitmq:/plugins</code></pre><p>进入容器  </p><pre><code class="hljs">docker exec -it rabbitmq /bin/bash  </code></pre><p>启动插件（注意是插件名称，不是插件文件名）  </p><pre><code class="hljs">rabbitmq-plugins enable rabbitmq_delayed_message_exchange</code></pre><p>退出容器（ctrl + d）<br>重启容器  </p><pre><code class="hljs">docker restart rabbitmq</code></pre><p>在网页管理的exchanges会看到新增的type类型为 x-delayed-message<br>新增交换机<br><img src="/image/%E6%96%B0%E5%A2%9Ex-delayed-message%E4%BA%A4%E6%8D%A2%E6%9C%BA.png" alt="新增交换机"></p>]]></content>
    
    
    <categories>
      
      <category>运维</category>
      
      <category>docker</category>
      
      <category>RabbitMQ</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
      <tag>RabbitMQ</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>spring允许cors跨域配置</title>
    <link href="/spring%E5%85%81%E8%AE%B8cors%E8%B7%A8%E5%9F%9F%E9%85%8D%E7%BD%AE.html"/>
    <url>/spring%E5%85%81%E8%AE%B8cors%E8%B7%A8%E5%9F%9F%E9%85%8D%E7%BD%AE.html</url>
    
    <content type="html"><![CDATA[<p>创建配置类，要求在spring扫描包路径下  </p><pre><code class="hljs">@Configurationpublic class CorsConfig &#123;    /**    * 跨域支持    */    @Bean    public WebMvcConfigurer corsConfigurer() &#123;        return new WebMvcConfigurer() &#123;            @Override            public void addCorsMappings(CorsRegistry registry) &#123;                registry.addMapping(&quot;/**&quot;)                        .allowCredentials(true)                        .allowedMethods(&quot;POST&quot;, &quot;GET&quot;, &quot;PUT&quot;, &quot;OPTIONS&quot;, &quot;DELETE&quot;)                        .allowedOrigins(&quot;*&quot;);            &#125;        &#125;;    &#125;&#125;</code></pre><p>浏览器在不同的域名下打开控制台</p><pre><code class="hljs">var xhr = new XMLHttpRequest();xhr.open(&#39;GET&#39;, &#39;http://请求url&#39;);xhr.send(null);xhr.onload = function(e) &#123;    var xhr = e.target;    console.log(xhr.responseText);&#125;</code></pre>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>Spring</category>
      
    </categories>
    
    
    <tags>
      
      <tag>cors</tag>
      
      <tag>spring</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VS Code 终端无法执行命令, 报错：无法将 项识别为 cmdlet、函数、脚本文件或可运行程序的名称</title>
    <link href="/VS-Code-%E7%BB%88%E7%AB%AF%E6%97%A0%E6%B3%95%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4-%E6%8A%A5%E9%94%99%EF%BC%9A%E6%97%A0%E6%B3%95%E5%B0%86-%E9%A1%B9%E8%AF%86%E5%88%AB%E4%B8%BA-cmdlet%E3%80%81%E5%87%BD%E6%95%B0%E3%80%81%E8%84%9A%E6%9C%AC%E6%96%87%E4%BB%B6%E6%88%96%E5%8F%AF%E8%BF%90%E8%A1%8C%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%90%8D%E7%A7%B0.html"/>
    <url>/VS-Code-%E7%BB%88%E7%AB%AF%E6%97%A0%E6%B3%95%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4-%E6%8A%A5%E9%94%99%EF%BC%9A%E6%97%A0%E6%B3%95%E5%B0%86-%E9%A1%B9%E8%AF%86%E5%88%AB%E4%B8%BA-cmdlet%E3%80%81%E5%87%BD%E6%95%B0%E3%80%81%E8%84%9A%E6%9C%AC%E6%96%87%E4%BB%B6%E6%88%96%E5%8F%AF%E8%BF%90%E8%A1%8C%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%90%8D%E7%A7%B0.html</url>
    
    <content type="html"><![CDATA[<p>执行npm install 报错 npm : 无法将“npm”项识别为 cmdlet、函数、脚本文件或可运行程序的名称······<br>解决办法：<br>1、右击VSCode图标，选择以管理员身份运行<br>2、在VSCode终端运行代码<br>get-ExecutionPolicy<br>显示Restricted，表示禁止终端使用命令<br>3、再运行代码<br>set-ExecutionPolicy RemoteSigned<br>4、此时再执行<br>get-ExecutionPolicy<br>显示RemoteSigned，则表示可以使用终端命令了  </p>]]></content>
    
    
    <categories>
      
      <category>开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VS-Code</tag>
      
      <tag>开发</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GPG-key</title>
    <link href="/GPG-key.html"/>
    <url>/GPG-key.html</url>
    
    <content type="html"><![CDATA[<p>GPG-key  </p><p><code>-----BEGIN PGP MESSAGE-----</code></p><p><code>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 =4w4k</code><br><code>-----END PGP MESSAGE-----</code></p><p><a href="/file/Zeke%20Ruan%20zeke.ruan@gmail.com-(0x04751ACD6E3A1903)-public.asc">点击下载GPG公钥</a><br>有效期至: 2028-08-11<br>密钥指纹: 89F2 BFE3 2381 92AF 5941  17A6 0475 1ACD 6E3A 1903<br>E-mail: <a href="mailto:&#x7a;&#101;&#107;&#x65;&#46;&#114;&#117;&#97;&#x6e;&#64;&#103;&#109;&#97;&#x69;&#x6c;&#46;&#99;&#111;&#x6d;">zeke.ruan@gmail.com</a><br>推荐支持GPG的邮件客户端: <a href="https://www.thunderbird.net/zh-CN/desktop/">Thunderbird</a>  </p>]]></content>
    
    
    <categories>
      
      <category>GPG-key</category>
      
    </categories>
    
    
    <tags>
      
      <tag>GPG-key</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu 安装 Docker</title>
    <link href="/Ubuntu-%E5%AE%89%E8%A3%85-Docker.html"/>
    <url>/Ubuntu-%E5%AE%89%E8%A3%85-Docker.html</url>
    
    <content type="html"><![CDATA[<p>Ubuntu 安装 Docker<br>在安装 Docker 之前，您需要卸载所有有冲突的软件包  </p><h3 id="运行以下命令来卸载所有冲突的包"><a href="#运行以下命令来卸载所有冲突的包" class="headerlink" title="运行以下命令来卸载所有冲突的包:"></a>运行以下命令来卸载所有冲突的包:</h3><p><code>for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done</code><br>使用apt存储库安装<br>在新的主机上首次安装 Docker 之前，您需要设置 Docker apt存储库。之后，您可以从存储库安装和更新 Docker  </p><h3 id="设置-Docker-的-apt-存储库"><a href="#设置-Docker-的-apt-存储库" class="headerlink" title="设置 Docker 的 apt 存储库"></a>设置 Docker 的 apt 存储库</h3><p>&#96;&#96;<br><code># Add Docker&#39;s official GPG key:</code><br>sudo apt-get update<br>sudo apt-get install ca-certificates curl<br>sudo install -m 0755 -d &#x2F;etc&#x2F;apt&#x2F;keyrings<br>sudo curl -fsSL <a href="https://download.docker.com/linux/ubuntu/gpg">https://download.docker.com/linux/ubuntu/gpg</a> -o &#x2F;etc&#x2F;apt&#x2F;keyrings&#x2F;docker.asc<br>sudo chmod a+r &#x2F;etc&#x2F;apt&#x2F;keyrings&#x2F;docker.asc  </p><p><code># Add the repository to Apt sources:</code><br>echo \<br>  <code>&quot;deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \   $(. /etc/os-release &amp;&amp; echo &quot;$&#123;UBUNTU_CODENAME:-$VERSION_CODENAME&#125;&quot;) stable&quot; | \   sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null</code><br>sudo apt-get update&#96;&#96;  </p><h3 id="安装-Docker-包"><a href="#安装-Docker-包" class="headerlink" title="安装 Docker 包"></a>安装 Docker 包</h3><p>sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin  </p><h3 id="通过运行镜像来验证安装是否成功"><a href="#通过运行镜像来验证安装是否成功" class="headerlink" title="通过运行镜像来验证安装是否成功"></a>通过运行镜像来验证安装是否成功</h3><p>sudo docker run hello-world  </p>]]></content>
    
    
    <categories>
      
      <category>运维</category>
      
      <category>docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>docker安装redis:6.2.14</title>
    <link href="/docker%E5%AE%89%E8%A3%85redis-6-2-14.html"/>
    <url>/docker%E5%AE%89%E8%A3%85redis-6-2-14.html</url>
    
    <content type="html"><![CDATA[<p>docker安装redis:6.2.14  </p><h1 id="拉取redis镜像"><a href="#拉取redis镜像" class="headerlink" title="拉取redis镜像"></a>拉取redis镜像</h1><p>docker pull redis:6.2.14  </p><h1 id="创建挂载目录"><a href="#创建挂载目录" class="headerlink" title="创建挂载目录"></a>创建挂载目录</h1><p>sudo mkdir &#x2F;docker-data&#x2F;redis  </p><h1 id="下载redis-conf文件"><a href="#下载redis-conf文件" class="headerlink" title="下载redis.conf文件"></a>下载redis.conf文件</h1><p>cd &#x2F;docker-data&#x2F;redis<br>sudo wget <a href="https://raw.githubusercontent.com/redis/redis/6.2.14/redis.conf">https://raw.githubusercontent.com/redis/redis/6.2.14/redis.conf</a></p><h1 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h1><p>chmod 777 redis.conf  </p><h1 id="修改默认配置信息"><a href="#修改默认配置信息" class="headerlink" title="修改默认配置信息"></a>修改默认配置信息</h1><p>sudo vi &#x2F;docker-data&#x2F;redis&#x2F;redis.conf<br>bind 127.0.0.1 # 这行要注释掉，解除本地连接限制<br>protected-mode no # 默认yes，如果设置为yes，则只允许在本机的回环连接，其他机器无法连接。<br>daemonize no # 默认no 为不守护进程模式，docker部署不需要改为yes，docker run -d本身就是后台启动，不然会冲突<br>requirepass 123456 # 设置密码<br>appendonly yes # 持久化  </p><h1 id="docker启动redis"><a href="#docker启动redis" class="headerlink" title="docker启动redis"></a>docker启动redis</h1><p>docker run –name redis \<br>-p 6379:6379 \<br>-v &#x2F;docker-data&#x2F;redis&#x2F;redis.conf:&#x2F;etc&#x2F;redis&#x2F;redis.conf \<br>-v &#x2F;docker-data&#x2F;redis:&#x2F;data \<br>-d redis:6.2.14 redis-server &#x2F;etc&#x2F;redis&#x2F;redis.conf –appendonly yes  </p><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>-p 6379:6379：端口映射，前面是宿主机，后面是容器。<br>–name redis：指定该容器名称。<br>-v 挂载文件或目录：前面是宿主机，后面是容器。<br>-d redis redis-server &#x2F;etc&#x2F;redis&#x2F;redis.conf：表示后台启动redis，以配置文件启动redis，加载容器内的conf文件。<br>appendonly yes：开启redis 持久化。  </p><h1 id="查看运行状态"><a href="#查看运行状态" class="headerlink" title="查看运行状态"></a>查看运行状态</h1><p>docker logs redis  </p>]]></content>
    
    
    <categories>
      
      <category>运维</category>
      
      <category>docker</category>
      
      <category>redis</category>
      
    </categories>
    
    
    <tags>
      
      <tag>redis</tag>
      
      <tag>docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>docker安装nginx</title>
    <link href="/docker%E5%AE%89%E8%A3%85nginx.html"/>
    <url>/docker%E5%AE%89%E8%A3%85nginx.html</url>
    
    <content type="html"><![CDATA[<p>docker安装nginx<br>docker run <br>-p 80:80 -p 443:443 <br>–name nginx <br>-v &#x2F;docker-data&#x2F;nginx&#x2F;conf&#x2F;nginx.conf:&#x2F;etc&#x2F;nginx&#x2F;nginx.conf <br>-v &#x2F;docker-data&#x2F;nginx&#x2F;conf&#x2F;conf.d:&#x2F;etc&#x2F;nginx&#x2F;conf.d <br>-v &#x2F;docker-data&#x2F;nginx&#x2F;log:&#x2F;var&#x2F;log&#x2F;nginx<br>-v &#x2F;docker-data&#x2F;nginx&#x2F;ssl:&#x2F;etc&#x2F;nginx&#x2F;ssl&#x2F; <br>-v &#x2F;docker-data&#x2F;nginx&#x2F;html:&#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html <br>-d nginx:latest</p>]]></content>
    
    
    <categories>
      
      <category>运维</category>
      
      <category>docker</category>
      
      <category>nginx</category>
      
    </categories>
    
    
    <tags>
      
      <tag>nginx</tag>
      
      <tag>docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
